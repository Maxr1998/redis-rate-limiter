name: Build and publish docker image

on:
  push:
    branches:
      - master
  schedule:
    # Every 14th day of the month at 6:30 AM
    - cron: '30 6 14 * *'

jobs:
  build:
    strategy:
      matrix:
        target: [ amd64, arm64 ]
    runs-on: ubuntu-22.04
    outputs:
      module_amd64: ${{ steps.export.outputs.module_amd64 }}
      module_arm64: ${{ steps.export.outputs.module_arm64 }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Install GCC aarch64
        if: matrix.target == 'arm64'
        run: sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
      - name: Build module (amd64)
        if: matrix.target == 'amd64'
        run: make
      - name: Build module (arm64)
        if: matrix.target == 'arm64'
        run: make CC=aarch64-linux-gnu-gcc LD=aarch64-linux-gnu-ld
      - name: Export module to output
        id: export
        run: echo "module_${{ matrix.target }}=$(base64 -w 0 ratelimit.so)" >> $GITHUB_OUTPUT
  publish:
    needs:
      - build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0
      - name: Pull modules from previous job
        run: |
          echo "${{ needs.build.outputs.module_amd64 }}" | base64 -d > docker/ratelimit-amd64.so
          echo "${{ needs.build.outputs.module_arm64 }}" | base64 -d > docker/ratelimit-arm64.so
          chmod a+x docker/ratelimit-*.so
      - name: Publish redis image
        uses: elgohr/Publish-Docker-Github-Action@eb53b3ec07136a6ebaed78d8135806da64f7c7e2 # v5
        with:
          name: maxr1998/redis-custom
          workdir: docker
          platforms: linux/amd64,linux/arm64
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: 6-alpine